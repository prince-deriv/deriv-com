{"version":3,"sources":["webpack://deriv-com/./src/pages/cancellablePromise.js"],"names":["promise","isCancelled","value","Promise","res","rej","rejectPromise","i","console","log","then","d","catch","e","cancel"],"mappings":"oHA0BA,UA1B2B,SAACA,GACxB,IAAMC,EAAc,CAAEC,OAAO,GAiB7B,MAAO,CACHF,QAjBmB,IAAIG,SAAQ,SAACC,EAAKC,GACrC,IAAMC,EAAgB,SAACC,GACnBC,QAAQC,IAAI,0BAEZJ,EAAIE,IAGRP,EACKU,MAAK,SAACC,GACH,OAAOV,EAAYC,MAAQI,EAAcL,GAAeG,EAAIO,MAE/DC,OAAM,SAACC,GACJP,EAAcL,EAAYC,MAAQD,EAAcY,SAMxDC,OAAQ,WACJb,EAAYC,OAAQ","file":"component---src-pages-cancellable-promise-js-abdc128f7624d0933748.js","sourcesContent":["const cancellablePromise = (promise) => {\n    const isCancelled = { value: false }\n    const wrappedPromise = new Promise((res, rej) => {\n        const rejectPromise = (i) => {\n            console.log('Promise was cancelled!')\n\n            rej(i)\n        }\n\n        promise\n            .then((d) => {\n                return isCancelled.value ? rejectPromise(isCancelled) : res(d)\n            })\n            .catch((e) => {\n                rejectPromise(isCancelled.value ? isCancelled : e)\n            })\n    })\n\n    return {\n        promise: wrappedPromise,\n        cancel: () => {\n            isCancelled.value = true\n        },\n    }\n}\n\nexport default cancellablePromise\n"],"sourceRoot":""}