{"version":3,"sources":["webpack://deriv-com/./src/pages/trader-tools/common/_underlying-data.js","webpack://deriv-com/./src/pages/trader-tools/swap-calculator/_swap-calculator.js","webpack://deriv-com/./src/pages/trader-tools/swap-calculator/index.js"],"names":["optionItemDefault","name","display_name","key","icon","market","leverageItemLists","syntheticItemLists","src","BOOM1000","alt","BOOM500","CRASH1000","CRASH500","RANGEBREAK100","RANGEBREAK200","STEPINDICES","HFVOL10","HFVOL50","HFVOL100","INDEX10S1","INDEX10","INDEX25S1","INDEX25","INDEX50S1","INDEX50","INDEX75S1","INDEX75","INDEX100S1","INDEX100","financialItemLists","AAL","AAPL","ABNB","ADS","AIG","AMZN","BA","BABA","BAC","BAY","BIIB","BMW","C","CRM","CSCO","DAL","DBK","DIS","EBAY","FB","FDX","GM","GOOGL","GS","HPQ","IBM","INTC","JNJ","JPM","KO","MA","MCD","MRNA","MSFT","NFLX","NKE","NVDA","PFE","PG","PYPL","TEVA","TSLA","TWTR","UBER","V","WMT","ZM","AUS200","DAX30","ESP35","EUR50","FRA40","UK100","JP225","NED25","US500","US100","US30","CLBRENT","BCHUSD","BTCUSD","DSHUSD","EOSUSD","LTCUSD","XRPUSD","AUDCAD","AUDCHF","AUDJPY","AUDNZD","AUDUSD","EURCAD","EURCHF","EURGBP","EURJPY","EURNZD","EURUSD","GBPCHF","GBPJPY","GBPUSD","NZDUSD","USDCAD","USDCHF","USDJPY","CADCHF","CADJPY","GBPAUD","GBPCAD","GBPNZD","NZDCAD","NZDJPY","USDZAR","CHFJPY","OILUSD","GOLDUSD","SILVERUSD","PALLADIUMUSD","PLATINUMUSD","AUDINDEX","GBPINDEX","EURINDEX","USDINDEX","StyledInputGroup","styled","InputGroup","data","useStaticQuery","useState","tab","setTab","onTabClick","jc","ai","to","color","localize","RightArrow","height","width","style","margin","direction","as","type","align","weight","mt","mb","tablet","active","onClick","size","enableReinitialize","initialValues","swapCharge","swapChargeSymbol","symbol","volume","optionList","contractSize","swapRate","assetPrice","validate","resetValidationSynthetic","onSubmit","values","setFieldValue","getSwapChargeSynthetic","numberSubmitFormat","numberSubmitFormatNegative","handleBlur","errors","touched","setFieldError","setFieldTouched","isValid","dirty","htmlFor","numberWithCommas","option_list","label","default_option","selected_option","id","onChange","value","getCurrency","getContractSize","error","onBlur","field","autoComplete","data-lpignore","handleError","current_input","focus","maxLength","getMaxLength","background","secondary","disabled","translate_text","components","has_single_state","header","header_style","item_style","plus","swap_synthetic_formula","swap_synthetic_formula_mobile","tertiary","external","target","rel","pointValue","resetValidationForex","getSwapChargeForex","max_width","swap_forex_formula","swap_forex_formula_mobile","WithIntl","title","description"],"mappings":"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","file":"component---src-pages-trader-tools-swap-calculator-index-js-896da24ef073ee02e507.js","sourcesContent":["import React from 'react'\nimport {\n    AAL,\n    AAPL,\n    ABNB,\n    ADS,\n    AIG,\n    AMZN,\n    AUDCAD,\n    AUDCHF,\n    AUDINDEX,\n    AUDJPY,\n    AUDNZD,\n    AUDUSD,\n    AUS200,\n    BA,\n    BABA,\n    BAC,\n    BAY,\n    BCHUSD,\n    BIIB,\n    BMW,\n    BOOM1000,\n    BOOM500,\n    BTCUSD,\n    C,\n    CADCHF,\n    CADJPY,\n    CHFJPY,\n    CLBRENT,\n    CRASH1000,\n    CRASH500,\n    CRM,\n    CSCO,\n    DAL,\n    DAX30,\n    DBK,\n    DIS,\n    DSHUSD,\n    EBAY,\n    EOSUSD,\n    ESP35,\n    EUR50,\n    EURCAD,\n    EURCHF,\n    EURGBP,\n    EURINDEX,\n    EURJPY,\n    EURNZD,\n    EURUSD,\n    FB,\n    FDX,\n    FRA40,\n    GBPAUD,\n    GBPCAD,\n    GBPCHF,\n    GBPINDEX,\n    GBPJPY,\n    GBPNZD,\n    GBPUSD,\n    GM,\n    GOLDUSD,\n    GOOGL,\n    GS,\n    HFVOL10,\n    HFVOL100,\n    HFVOL50,\n    HPQ,\n    IBM,\n    INDEX10,\n    INDEX100,\n    INDEX100S1,\n    INDEX10S1,\n    INDEX25,\n    INDEX25S1,\n    INDEX50,\n    INDEX50S1,\n    INDEX75,\n    INDEX75S1,\n    INTC,\n    JNJ,\n    JP225,\n    JPM,\n    KO,\n    LTCUSD,\n    MA,\n    MCD,\n    MRNA,\n    MSFT,\n    NED25,\n    NFLX,\n    NKE,\n    NVDA,\n    NZDCAD,\n    NZDJPY,\n    NZDUSD,\n    OILUSD,\n    PALLADIUMUSD,\n    PFE,\n    PG,\n    PLATINUMUSD,\n    PYPL,\n    RANGEBREAK100,\n    RANGEBREAK200,\n    SILVERUSD,\n    STEPINDICES,\n    TEVA,\n    TSLA,\n    TWTR,\n    UBER,\n    UK100,\n    US100,\n    US30,\n    US500,\n    USDCAD,\n    USDCHF,\n    USDINDEX,\n    USDJPY,\n    USDZAR,\n    V,\n    WMT,\n    XRPUSD,\n    ZM,\n} from 'components/elements/symbols.js'\n\nexport const optionItemDefault = {\n    name: 'default',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const optionLeverageDefault = {\n    name: 'value',\n    display_name: '',\n    key: '14',\n    icon: '',\n    market: '',\n}\n\nexport const leverageItemLists = [\n    { name: 4000, display_name: 4000, key: '1', icon: '' },\n    { name: 3500, display_name: 3500, key: '2', icon: '' },\n    { name: 3000, display_name: 3000, key: '3', icon: '' },\n    { name: 2500, display_name: 2500, key: '4', icon: '' },\n    { name: 2000, display_name: 2000, key: '5', icon: '' },\n    { name: 1500, display_name: 1500, key: '6', icon: '' },\n    { name: 1000, display_name: 1000, key: '7', icon: '' },\n    { name: 900, display_name: 900, key: '8', icon: '' },\n    { name: 800, display_name: 800, key: '9', icon: '' },\n    { name: 700, display_name: 700, key: '10', icon: '' },\n    { name: 600, display_name: 600, key: '11', icon: '' },\n    { name: 500, display_name: 500, key: '12', icon: '' },\n    { name: 400, display_name: 400, key: '13', icon: '' },\n    { name: 200, display_name: 200, key: '14', icon: '' },\n    { name: 100, display_name: 100, key: '15', icon: '' },\n    { name: 50, display_name: 50, key: '16', icon: '' },\n    { name: 30, display_name: 30, key: '17', icon: '' },\n    { name: 5, display_name: 5, key: '18', icon: '' },\n]\n\nexport const syntheticItemLists = [\n    {\n        name: 'Boom 1000 Index',\n        display_name: 'Boom 1000 Index',\n        icon: <img src={BOOM1000} alt=\"boom 100\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Boom 500 Index',\n        display_name: 'Boom 500 Index',\n        icon: <img src={BOOM500} alt=\"boom 500\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Crash 1000 Index',\n        display_name: 'Crash 1000 Index',\n        icon: <img src={CRASH1000} alt=\"crash 1000\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Crash 500 Index',\n        display_name: 'Crash 500 Index',\n        icon: <img src={CRASH500} alt=\"crash 500\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Range Break 100 Index',\n        display_name: 'Range Break 100 Index',\n        icon: <img src={RANGEBREAK100} alt=\"\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Range Break 200 Index',\n        display_name: 'Range Break 200 Index',\n        icon: <img src={RANGEBREAK200} alt=\"range break 200\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Step Index',\n        display_name: 'Step Index',\n        icon: <img src={STEPINDICES} alt=\"step index\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'HF Volatility 10 Index',\n        display_name: 'HF Volatility 10 Index',\n        icon: <img src={HFVOL10} alt=\"hf vol 10\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'HF Volatility 50 Index',\n        display_name: 'HF Volatility 50 Index',\n        icon: <img src={HFVOL50} alt=\"hf vol 50\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'HF Volatility 100 Index',\n        display_name: 'HF Volatility 100 Index',\n        icon: <img src={HFVOL100} alt=\"hf vol 100\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 10 (1s) Index',\n        display_name: 'Volatility 10 (1s) Index',\n        icon: <img src={INDEX10S1} alt=\"vol 10 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 10 Index',\n        display_name: 'Volatility 10 Index',\n        icon: <img src={INDEX10} alt=\"vol 10\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 25 (1s) Index',\n        display_name: 'Volatility 25 (1s) Index',\n        icon: <img src={INDEX25S1} alt=\"vol 25 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 25 Index',\n        display_name: 'Volatility 25 Index',\n        icon: <img src={INDEX25} alt=\"\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 50 (1s) Index',\n        display_name: 'Volatility 50 (1s) Index',\n        icon: <img src={INDEX50S1} alt=\"vol 50 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 50 Index',\n        display_name: 'Volatility 50 Index',\n        icon: <img src={INDEX50} alt=\"vol 50\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 75 (1s) Index',\n        display_name: 'Volatility 75 (1s) Index',\n        icon: <img src={INDEX75S1} alt=\"vol 75 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 75 Index',\n        display_name: 'Volatility 75 Index',\n        icon: <img src={INDEX75} alt=\"vol 75\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 100 (1s) Index',\n        display_name: 'Volatility 100 (1s) Index',\n        icon: <img src={INDEX100S1} alt=\"vol 100 1s\" />,\n        market: 'synthetic_indices',\n    },\n    {\n        name: 'Volatility 100 Index',\n        display_name: 'Volatility 100 Index',\n        icon: <img src={INDEX100} alt=\"vol 100\" />,\n        market: 'synthetic_indices',\n    },\n]\n\nexport const financialItemLists = [\n    {\n        name: 'AAL',\n        display_name: 'American Airlines Group Inc',\n        icon: <img src={AAL} alt=\"american airlines group inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'AAPL',\n        display_name: 'Apple',\n        icon: <img src={AAPL} alt=\"apple\" />,\n        market: 'other',\n    },\n    {\n        name: 'ABNB',\n        display_name: 'Airbnb',\n        icon: <img src={ABNB} alt=\"airbnb\" />,\n        market: 'other',\n    },\n    {\n        name: 'ADS',\n        display_name: 'Adidas Salomon',\n        icon: <img src={ADS} alt=\"adidas salomon\" />,\n        market: 'other',\n    },\n    {\n        name: 'AIG',\n        display_name: 'American International Group',\n        icon: <img src={AIG} alt=\"american international group\" />,\n        market: 'other',\n    },\n    {\n        name: 'AMZN',\n        display_name: 'Amazon.com Inc',\n        icon: <img src={AMZN} alt=\"amazon.com inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'BA',\n        display_name: 'Boeing',\n        icon: <img src={BA} alt=\"boeing\" />,\n        market: 'other',\n    },\n    {\n        name: 'BABA',\n        display_name: 'Alibaba Group Holding Ltd',\n        icon: <img src={BABA} alt=\"alibaba group holding ltd\" />,\n        market: 'other',\n    },\n    {\n        name: 'BAC',\n        display_name: 'Bank of America',\n        icon: <img src={BAC} alt=\"bank of america\" />,\n        market: 'other',\n    },\n    {\n        name: 'BAY',\n        display_name: 'Bayer AG',\n        icon: <img src={BAY} alt=\"bayer ag\" />,\n        market: 'other',\n    },\n    {\n        name: 'BIIB',\n        display_name: 'Biogen Inc.',\n        icon: <img src={BIIB} alt=\"biogen inc.\" />,\n        market: 'other',\n    },\n    {\n        name: 'BMW',\n        display_name: 'BMW',\n        icon: <img src={BMW} alt=\"bmw\" />,\n        market: 'other',\n    },\n    {\n        name: 'C',\n        display_name: 'Citigroup',\n        icon: <img src={C} alt=\"citigroup\" />,\n        market: 'other',\n    },\n    {\n        name: 'CRM',\n        display_name: 'Salesforce.com Inc',\n        icon: <img src={CRM} alt=\"salesforce.com inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'CSCO',\n        display_name: 'Cisco Systems',\n        icon: <img src={CSCO} alt=\"cisco systems\" />,\n        market: 'other',\n    },\n    {\n        name: 'DAL',\n        display_name: 'Delta Air Lines',\n        icon: <img src={DAL} alt=\"delta air lines\" />,\n        market: 'other',\n    },\n    {\n        name: 'DBK',\n        display_name: 'Deutsche Bank AG',\n        icon: <img src={DBK} alt=\"deutsche bank ag\" />,\n        market: 'other',\n    },\n    {\n        name: 'DIS',\n        display_name: 'Walt Disney Company',\n        icon: <img src={DIS} alt=\"walt disney company\" />,\n        market: 'other',\n    },\n    {\n        name: 'EBAY',\n        display_name: 'eBay Inc',\n        icon: <img src={EBAY} alt=\"ebay inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'FB',\n        display_name: 'Facebook Inc',\n        icon: <img src={FB} alt=\"facebook inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'FDX',\n        display_name: 'Fedex',\n        icon: <img src={FDX} alt=\"fedex\" />,\n        market: 'other',\n    },\n    {\n        name: 'GM',\n        display_name: 'General Motors Company',\n        icon: <img src={GM} alt=\"general motors company\" />,\n        market: 'other',\n    },\n    {\n        name: 'GOOGL',\n        display_name: 'Alphabet Inc Class C',\n        icon: <img src={GOOGL} alt=\"alphabet inc class c\" />,\n        market: 'other',\n    },\n    {\n        name: 'GS',\n        display_name: 'Goldman Sachs Group',\n        icon: <img src={GS} alt=\"goldman sachs group\" />,\n        market: 'other',\n    },\n    {\n        name: 'HPQ',\n        display_name: 'HP Inc',\n        icon: <img src={HPQ} alt=\"hp inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'IBM',\n        display_name: 'IBM',\n        icon: <img src={IBM} alt=\"ibm\" />,\n        market: 'other',\n    },\n    {\n        name: 'INTC',\n        display_name: 'Intel',\n        icon: <img src={INTC} alt=\"intel\" />,\n        market: 'other',\n    },\n    {\n        name: 'JNJ',\n        display_name: 'Jonhson & Johnson',\n        icon: <img src={JNJ} alt=\"jonhson and johnson\" />,\n        market: 'other',\n    },\n    {\n        name: 'JPM',\n        display_name: 'JP Morgan Chase',\n        icon: <img src={JPM} alt=\"jp morgan chase\" />,\n        market: 'other',\n    },\n    {\n        name: 'KO',\n        display_name: 'Coca-Cola',\n        icon: <img src={KO} alt=\"coca-cola\" />,\n        market: 'other',\n    },\n    {\n        name: 'MA',\n        display_name: 'Mastercard Inc',\n        icon: <img src={MA} alt=\"mastercard inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'MCD',\n        display_name: 'McDonalds',\n        icon: <img src={MCD} alt=\"McDonalds\" />,\n        market: 'other',\n    },\n    {\n        name: 'MRNA',\n        display_name: 'Moderna Inc',\n        icon: <img src={MRNA} alt=\"moderna inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'MSFT',\n        display_name: 'Microsoft Corporation',\n        icon: <img src={MSFT} alt=\"microsoft corporation\" />,\n        market: 'other',\n    },\n    {\n        name: 'NFLX',\n        display_name: 'Netflix Inc',\n        icon: <img src={NFLX} alt=\"netflix inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'NKE',\n        display_name: 'Nike',\n        icon: <img src={NKE} alt=\"nike\" />,\n        market: 'other',\n    },\n    {\n        name: 'NVDA',\n        display_name: 'NVIDIA Corp',\n        icon: <img src={NVDA} alt=\"nvidia corp\" />,\n        market: 'other',\n    },\n    {\n        name: 'PFE',\n        display_name: 'Pfizer',\n        icon: <img src={PFE} alt=\"pfizer\" />,\n        market: 'other',\n    },\n    {\n        name: 'PG',\n        display_name: 'Procter & Gamble',\n        icon: <img src={PG} alt=\"procter and gamble\" />,\n        market: 'other',\n    },\n    {\n        name: 'PYPL',\n        display_name: 'Paypal',\n        icon: <img src={PYPL} alt=\"paypal\" />,\n        market: 'other',\n    },\n    {\n        name: 'TEVA',\n        display_name: 'Teva Pharmaceutical Inds',\n        icon: <img src={TEVA} alt=\"teva pharmaceutical inds\" />,\n        market: 'other',\n    },\n    {\n        name: 'TSLA',\n        display_name: 'Tesla Inc',\n        icon: <img src={TSLA} alt=\"tesla inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'TWTR',\n        display_name: 'Twitter',\n        icon: <img src={TWTR} alt=\"twitter\" />,\n        market: 'other',\n    },\n    {\n        name: 'UBER',\n        display_name: 'Uber Technologies Inc',\n        icon: <img src={UBER} alt=\"uber technologies inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'V',\n        display_name: 'Visa',\n        icon: <img src={V} alt=\"visa\" />,\n        market: 'other',\n    },\n    {\n        name: 'WMT',\n        display_name: 'Wal-Mart Stores Inc',\n        icon: <img src={WMT} alt=\"wal-mart stores inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'ZM',\n        display_name: 'Zoom Video Communications Inc',\n        icon: <img src={ZM} alt=\"zoom video communications inc\" />,\n        market: 'other',\n    },\n    {\n        name: 'AUS200',\n        display_name: 'Australia 200',\n        icon: <img src={AUS200} alt=\"australia 200\" />,\n        market: 'other',\n    },\n    {\n        name: 'DAX30',\n        display_name: 'Germany 30',\n        icon: <img src={DAX30} alt=\"germany 30\" />,\n        market: 'other',\n    },\n    {\n        name: 'ESP35',\n        display_name: 'Spain 35',\n        icon: <img src={ESP35} alt=\"spain 35\" />,\n        market: 'other',\n    },\n    {\n        name: 'EUR50',\n        display_name: 'Europe 50',\n        icon: <img src={EUR50} alt=\"europe 50\" />,\n        market: 'other',\n    },\n    {\n        name: 'FRA40',\n        display_name: 'France 40',\n        icon: <img src={FRA40} alt=\"france 40\" />,\n        market: 'other',\n    },\n    {\n        name: 'UK100',\n        display_name: 'UK 100',\n        icon: <img src={UK100} alt=\"uk 100\" />,\n        market: 'other',\n    },\n    {\n        name: 'JP225',\n        display_name: 'Japan 225',\n        icon: <img src={JP225} alt=\"japan 225\" />,\n        market: 'other',\n    },\n    {\n        name: 'NED25',\n        display_name: 'Netherland 25',\n        icon: <img src={NED25} alt=\"netherland 25\" />,\n        market: 'other',\n    },\n    {\n        name: 'US500',\n        display_name: 'US 500',\n        icon: <img src={US500} alt=\"us 500\" />,\n        market: 'other',\n    },\n    {\n        name: 'US100',\n        display_name: 'US 100',\n        icon: <img src={US100} alt=\"us 100\" />,\n        market: 'other',\n    },\n    {\n        name: 'US30',\n        display_name: 'Wall Street 30',\n        icon: <img src={US30} alt=\"wall street 30\" />,\n        market: 'other',\n    },\n    {\n        name: 'CL_BRENT',\n        display_name: 'CL_BRENT',\n        icon: <img src={CLBRENT} alt=\"cl brent\" />,\n        market: 'other',\n    },\n    {\n        name: 'BCHUSD',\n        display_name: 'BCH/USD',\n        icon: <img src={BCHUSD} alt=\"bch usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'BTCUSD',\n        display_name: 'BTC/USD',\n        icon: <img src={BTCUSD} alt=\"btc usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'DSHUSD',\n        display_name: 'DSH/USD',\n        icon: <img src={DSHUSD} alt=\"dsh usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'EOSUSD',\n        display_name: 'EOS/USD',\n        icon: <img src={EOSUSD} alt=\"eos usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'LTCUSD',\n        display_name: 'LTC/USD',\n        icon: <img src={LTCUSD} alt=\"ltc usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'XRPUSD',\n        display_name: 'XRP/USD',\n        icon: <img src={XRPUSD} alt=\"xrp usd\" />,\n        market: 'crypto',\n    },\n    {\n        name: 'AUDCAD',\n        display_name: 'AUD/CAD',\n        icon: <img src={AUDCAD} alt=\"aud cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDCHF',\n        display_name: 'AUD/CHF',\n        icon: <img src={AUDCHF} alt=\"aud chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDJPY',\n        display_name: 'AUD/JPY',\n        icon: <img src={AUDJPY} alt=\"aud jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDNZD',\n        display_name: 'AUD/NZD',\n        icon: <img src={AUDNZD} alt=\"aud nzd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'AUDUSD',\n        display_name: 'AUD/USD',\n        icon: <img src={AUDUSD} alt=\"aud usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURCAD',\n        display_name: 'EUR/CAD',\n        icon: <img src={EURCAD} alt=\"eur cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURCHF',\n        display_name: 'EUR/CHF',\n        icon: <img src={EURCHF} alt=\"eur chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURGBP',\n        display_name: 'EUR/GBP',\n        icon: <img src={EURGBP} alt=\"eur gbp\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURJPY',\n        display_name: 'EUR/JPY',\n        icon: <img src={EURJPY} alt=\"eur jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURNZD',\n        display_name: 'EUR/NZD',\n        icon: <img src={EURNZD} alt=\"eur nzd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'EURUSD',\n        display_name: 'EUR/USD',\n        icon: <img src={EURUSD} alt=\"eur usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPCHF',\n        display_name: 'GBP/CHF',\n        icon: <img src={GBPCHF} alt=\"gbp chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPJPY',\n        display_name: 'GBP/JPY',\n        icon: <img src={GBPJPY} alt=\"gbp jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPUSD',\n        display_name: 'GBP/USD',\n        icon: <img src={GBPUSD} alt=\"gbp usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'NZDUSD',\n        display_name: 'NZD/USD',\n        icon: <img src={NZDUSD} alt=\"nzd usd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDCAD',\n        display_name: 'USD/CAD',\n        icon: <img src={USDCAD} alt=\"usd cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDCHF',\n        display_name: 'USD/CHF',\n        icon: <img src={USDCHF} alt=\"usd chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDJPY',\n        display_name: 'USD/JPY',\n        icon: <img src={USDJPY} alt=\"usd jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'CADCHF',\n        display_name: 'CAD/CHF',\n        icon: <img src={CADCHF} alt=\"cad chf\" />,\n        market: 'forex',\n    },\n    {\n        name: 'CADJPY',\n        display_name: 'CAD/JPY',\n        icon: <img src={CADJPY} alt=\"cad jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPAUD',\n        display_name: 'GBP/AUD',\n        icon: <img src={GBPAUD} alt=\"gbp aud\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPCAD',\n        display_name: 'GBP/CAD',\n        icon: <img src={GBPCAD} alt=\"gbp cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'GBPNZD',\n        display_name: 'GBP/NZD',\n        icon: <img src={GBPNZD} alt=\"gbp nzd\" />,\n        market: 'forex',\n    },\n    {\n        name: 'NZDCAD',\n        display_name: 'NZD/CAD',\n        icon: <img src={NZDCAD} alt=\"nzd cad\" />,\n        market: 'forex',\n    },\n    {\n        name: 'NZDJPY',\n        display_name: 'NZD/JPY',\n        icon: <img src={NZDJPY} alt=\"nzd jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'USDZAR',\n        display_name: 'USD/ZAR',\n        icon: <img src={USDZAR} alt=\"usd zar\" />,\n        market: 'forex',\n    },\n    {\n        name: 'CHFJPY',\n        display_name: 'CHF/JPY',\n        icon: <img src={CHFJPY} alt=\"chf  jpy\" />,\n        market: 'forex',\n    },\n    {\n        name: 'WTI_OIL',\n        display_name: 'Oil/USD',\n        icon: <img src={OILUSD} alt=\"oil usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XAUUSD',\n        display_name: 'Gold/USD',\n        icon: <img src={GOLDUSD} alt=\"gold usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XAGUSD',\n        display_name: 'Silver/USD',\n        icon: <img src={SILVERUSD} alt=\"silver usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XPDUSD',\n        display_name: 'Palladium/USD',\n        icon: <img src={PALLADIUMUSD} alt=\"palladium usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'XPTUSD',\n        display_name: 'Platinum/USD',\n        icon: <img src={PLATINUMUSD} alt=\"platinum usd\" />,\n        market: 'commodities',\n    },\n    {\n        name: 'AUDINDEX',\n        display_name: 'AUD Index',\n        icon: <img src={AUDINDEX} alt=\"aud index\" />,\n        market: 'smartfx',\n    },\n    {\n        name: 'GBPINDEX',\n        display_name: 'GBP Index',\n        icon: <img src={GBPINDEX} alt=\"gbp index\" />,\n        market: 'smartfx',\n    },\n    {\n        name: 'EURINDEX',\n        display_name: 'EUR Index',\n        icon: <img src={EURINDEX} alt=\"eur index\" />,\n        market: 'smartfx',\n    },\n    {\n        name: 'USDINDEX',\n        display_name: 'USD Index',\n        icon: <img src={USDINDEX} alt=\"usd index\" />,\n        market: 'smartfx',\n    },\n    {\n        name: 'GOLDINDEX',\n        display_name: 'Gold Index',\n        icon: <img src={GOLDUSD} alt=\"gold index\" />,\n        market: 'smartfx',\n    },\n]\n","import React, { useState } from 'react'\nimport { Formik, Field } from 'formik'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from 'styled-components'\nimport {\n    getSwapChargeSynthetic,\n    getSwapChargeForex,\n    resetValidationSynthetic,\n    resetValidationForex,\n    getContractSize,\n    getCurrency,\n    numberSubmitFormatNegative,\n    numberSubmitFormat,\n    numberWithCommas,\n    getMaxLength,\n} from '../common/_utility'\nimport {\n    optionItemDefault,\n    syntheticItemLists,\n    financialItemLists,\n} from '../common/_underlying-data'\nimport {\n    BreadCrumbContainer,\n    CalculateButton,\n    CalculatorBody,\n    CalculatorForm,\n    CalculatorHeader,\n    CalculatorLabel,\n    CalculatorOutputContainer,\n    CalculatorOutputField,\n    CalculatorOutputSymbol,\n    ContentContainer,\n    FormulaText,\n    header_style,\n    InputGroup,\n    item_style,\n    LinkWrapper,\n    RightContent,\n    SectionSubtitle,\n    StyledLinkButton,\n    StyledOl,\n    StyledSection,\n    SwapFormWrapper,\n    SwapTabSelector,\n} from '../common/_style'\nimport { localize, Localize } from 'components/localization'\nimport {\n    Accordion,\n    AccordionItem,\n    Dropdown,\n    Header,\n    LocalizedLinkText,\n    QueryImage,\n    Text,\n} from 'components/elements'\nimport { Flex, Show } from 'components/containers'\nimport Input from 'components/form/input'\nimport RightArrow from 'images/svg/black-right-arrow.svg'\n\nconst StyledInputGroup = styled(InputGroup)`\n    margin: 0;\n`\n\nconst SwapCalculator = () => {\n    const query = graphql`\n        query {\n            swap_synthetic_formula: file(\n                relativePath: { eq: \"trade-tools/swap-synthetic-formula.png\" }\n            ) {\n                ...fadeIn\n            }\n            swap_forex_formula: file(relativePath: { eq: \"trade-tools/swap-forex-formula.png\" }) {\n                ...fadeIn\n            }\n            swap_synthetic_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/swap-synthetic-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n            swap_forex_formula_mobile: file(\n                relativePath: { eq: \"trade-tools/swap-forex-formula-mobile.png\" }\n            ) {\n                ...fadeIn\n            }\n        }\n    `\n    const data = useStaticQuery(query)\n\n    const [tab, setTab] = useState('Synthetic')\n\n    const onTabClick = (tab) => {\n        setTab(tab)\n    }\n\n    return (\n        <>\n            <BreadCrumbContainer>\n                <Flex jc=\"flex-start\" ai=\"center\">\n                    <LocalizedLinkText to=\"/trader-tools/\" color=\"grey-5\">\n                        {localize(\"Traders' tools\")}\n                    </LocalizedLinkText>\n                    <img\n                        src={RightArrow}\n                        alt={localize('right arrow')}\n                        height=\"16\"\n                        width=\"16\"\n                        style={{ margin: '0 8px' }}\n                    />\n                    <Text>{localize('Swap calculator')}</Text>\n                </Flex>\n            </BreadCrumbContainer>\n            <StyledSection direction=\"column\">\n                <SectionSubtitle as=\"h3\" type=\"sub-section-title\" align=\"center\" weight=\"normal\">\n                    {localize(\n                        'Our swap calculator helps you to estimate the swap charges required to keep your positions open overnight on Deriv MetaTrader 5 (DMT5).',\n                    )}\n                </SectionSubtitle>\n\n                <Flex mt=\"80px\" mb=\"40px\" tablet={{ mt: '40px', mb: '24px' }}>\n                    <SwapTabSelector\n                        active={tab === 'Synthetic'}\n                        onClick={() => onTabClick('Synthetic')}\n                    >\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Synthetic')}\n                        </Text>\n                    </SwapTabSelector>\n                    <SwapTabSelector active={tab === 'Real'} onClick={() => onTabClick('Real')}>\n                        <Text size=\"var(--text-size-m)\" align=\"center\">\n                            {localize('Financial')}\n                        </Text>\n                    </SwapTabSelector>\n                </Flex>\n\n                {tab === 'Synthetic' ? (\n                    <>\n                        <ContentContainer mb=\"4.0rem\">\n                            <SwapFormWrapper>\n                                <Formik\n                                    enableReinitialize\n                                    initialValues={{\n                                        swapCharge: 0,\n                                        swapChargeSymbol: 'USD',\n                                        symbol: '',\n                                        volume: '',\n                                        optionList: syntheticItemLists,\n                                        contractSize: '',\n                                        swapRate: '',\n                                        assetPrice: '',\n                                    }}\n                                    validate={resetValidationSynthetic}\n                                    onSubmit={(values, { setFieldValue }) => {\n                                        setFieldValue('swapCharge', getSwapChargeSynthetic(values))\n                                        setFieldValue('volume', numberSubmitFormat(values.volume))\n                                        setFieldValue(\n                                            'swapRate',\n                                            numberSubmitFormatNegative(values.swapRate),\n                                        )\n                                        setFieldValue(\n                                            'assetPrice',\n                                            numberSubmitFormat(values.assetPrice),\n                                        )\n                                    }}\n                                >\n                                    {({\n                                        values,\n                                        setFieldValue,\n                                        handleBlur,\n                                        errors,\n                                        touched,\n                                        setFieldError,\n                                        setFieldTouched,\n                                        isValid,\n                                        dirty,\n                                    }) => (\n                                        <CalculatorForm>\n                                            <CalculatorHeader>\n                                                <CalculatorLabel htmlFor=\"message\">\n                                                    {localize('Swap charge')}\n                                                </CalculatorLabel>\n                                                <CalculatorOutputContainer>\n                                                    <CalculatorOutputField>\n                                                        {numberWithCommas(values.swapCharge)}\n                                                    </CalculatorOutputField>\n                                                    <CalculatorOutputSymbol>\n                                                        {values.swapChargeSymbol}\n                                                    </CalculatorOutputSymbol>\n                                                </CalculatorOutputContainer>\n                                            </CalculatorHeader>\n\n                                            <CalculatorBody>\n                                                <Dropdown\n                                                    mb=\"3.6rem\"\n                                                    option_list={values.optionList}\n                                                    label={localize('Symbol')}\n                                                    default_option={optionItemDefault}\n                                                    selected_option={values.symbol}\n                                                    id=\"symbol\"\n                                                    onChange={(value) => {\n                                                        setFieldValue(\n                                                            'swapCurrency',\n                                                            getCurrency(value),\n                                                        )\n                                                        setFieldValue(\n                                                            'contractSize',\n                                                            getContractSize(value),\n                                                        )\n                                                        setFieldValue('symbol', value)\n                                                    }}\n                                                    contractSize={values.contractSize}\n                                                    error={touched.symbol && errors.symbol}\n                                                    onBlur={handleBlur}\n                                                />\n\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"volume\"\n                                                        value={values.volume}\n                                                        onChange={(value) => {\n                                                            setFieldValue('volume', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"volume\"\n                                                                type=\"text\"\n                                                                label={localize('Volume')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.volume && errors.volume\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'volume',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('volume', '')\n                                                                    setFieldTouched(\n                                                                        'volume',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength={getMaxLength(\n                                                                    values.volume,\n                                                                    8,\n                                                                )}\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"assetPrice\"\n                                                        value={values.assetPrice}\n                                                        onChange={(value) => {\n                                                            setFieldValue('assetPrice', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"asset\"\n                                                                type=\"text\"\n                                                                value={values.assetPrice}\n                                                                label={localize('Asset price')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.assetPrice &&\n                                                                    errors.assetPrice\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'assetPrice',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('assetPrice', '')\n                                                                    setFieldTouched(\n                                                                        'assetPrice',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength={getMaxLength(\n                                                                    values.assetPrice,\n                                                                    15,\n                                                                )}\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n\n                                                <StyledInputGroup>\n                                                    <Field\n                                                        name=\"swapRate\"\n                                                        value={values.swapRate}\n                                                        onChange={(value) => {\n                                                            setFieldValue('swapRate', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"swapRate\"\n                                                                type=\"text\"\n                                                                value={values.swapRate}\n                                                                label={localize('Swap rate')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.swapRate &&\n                                                                    errors.swapRate\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'swapRate',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('swapRate', '')\n                                                                    setFieldTouched(\n                                                                        'swapRate',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength={getMaxLength(\n                                                                    values.swapRate,\n                                                                    15,\n                                                                )}\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </StyledInputGroup>\n                                                <Flex mt=\"1.5rem\">\n                                                    <CalculateButton\n                                                        secondary\n                                                        type=\"submit\"\n                                                        disabled={!isValid || !dirty}\n                                                    >\n                                                        {localize('Calculate')}\n                                                    </CalculateButton>\n                                                </Flex>\n                                            </CalculatorBody>\n                                        </CalculatorForm>\n                                    )}\n                                </Formik>\n                            </SwapFormWrapper>\n\n                            <RightContent>\n                                <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                    {localize('How to calculate swap charges')}\n                                </Header>\n\n                                <Text>\n                                    <Localize translate_text=\"For synthetic, the swap charge is calculated on an annual basis for long and short positions based on this formula:\" />\n                                </Text>\n                                <Text mb=\"2rem\">\n                                    <Localize\n                                        translate_text=\"<0>Swap charge = volume × contract size × asset price × (swap rate ÷ 100) ÷ 360</0>\"\n                                        components={[<strong key={0} />]}\n                                    />\n                                </Text>\n\n                                <Text mb=\"2rem\">\n                                    <Localize translate_text=\"This gives you the swap charge in USD.\" />\n                                </Text>\n\n                                <Header as=\"h3\" type=\"section-title\" mb=\"16px\">\n                                    {localize('Example calculation')}\n                                </Header>\n\n                                <Accordion has_single_state>\n                                    <AccordionItem\n                                        header={localize('Swap charge')}\n                                        header_style={header_style}\n                                        style={item_style}\n                                        plus\n                                    >\n                                        <Text mb=\"2rem\">\n                                            {localize(\n                                                'Let’s say you want to keep 0.01 lots of Volatility 75 Index with an asset price of 400,000 USD and swap rate of -7.5 open for one night.',\n                                            )}\n                                        </Text>\n\n                                        <Show.Desktop>\n                                            <QueryImage\n                                                data={data.swap_synthetic_formula}\n                                                alt={localize('swap synthetic formula')}\n                                            />\n                                        </Show.Desktop>\n                                        <Show.Mobile>\n                                            <QueryImage\n                                                data={data.swap_synthetic_formula_mobile}\n                                                alt={localize('swap synthetic formula mobile')}\n                                            />\n                                        </Show.Mobile>\n                                        <FormulaText size=\"14px\">\n                                            <StyledOl>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"The contract size is one standard lot of Volatility 75 Index = 1\" />\n                                                    </span>\n                                                </li>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"If the swap rate is positive, your account will be credited with the swap amount. If it is negative, your account will be debited.\" />\n                                                    </span>\n                                                </li>\n                                            </StyledOl>\n                                        </FormulaText>\n\n                                        <Text mt=\"1.6rem\">\n                                            <Localize\n                                                translate_text=\"So you will require a swap charge of <0>0.83 USD</0> to keep the position open for one night.\"\n                                                components={[<strong key={0} />]}\n                                            />\n                                        </Text>\n                                    </AccordionItem>\n                                </Accordion>\n\n                                <LinkWrapper height=\"auto\">\n                                    {\n                                        <StyledLinkButton\n                                            tertiary=\"true\"\n                                            type=\"mt5\"\n                                            external=\"true\"\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            {localize('Go to DMT5 dashboard')}\n                                        </StyledLinkButton>\n                                    }\n                                    {\n                                        <StyledLinkButton\n                                            secondary=\"true\"\n                                            to=\"/trade-types/margin#swap-policy/\"\n                                        >\n                                            {localize('Learn more about swap')}\n                                        </StyledLinkButton>\n                                    }\n                                </LinkWrapper>\n                            </RightContent>\n                        </ContentContainer>\n                    </>\n                ) : (\n                    <>\n                        <ContentContainer mb=\"2.0rem\">\n                            <SwapFormWrapper>\n                                <Formik\n                                    enableReinitialize\n                                    initialValues={{\n                                        swapCharge: 0,\n                                        swapChargeSymbol: 'USD',\n                                        symbol: '',\n                                        volume: '',\n                                        optionList: financialItemLists,\n                                        contractSize: '',\n                                        swapRate: '',\n                                        pointValue: '',\n                                    }}\n                                    validate={resetValidationForex}\n                                    onSubmit={(values, { setFieldValue }) => {\n                                        setFieldValue('swapCharge', getSwapChargeForex(values))\n                                        setFieldValue('volume', numberSubmitFormat(values.volume))\n                                        setFieldValue(\n                                            'swapRate',\n                                            numberSubmitFormatNegative(values.swapRate),\n                                        )\n                                        setFieldValue(\n                                            'pointValue',\n                                            numberSubmitFormat(values.pointValue),\n                                        )\n                                    }}\n                                >\n                                    {({\n                                        values,\n                                        setFieldValue,\n                                        handleBlur,\n                                        errors,\n                                        touched,\n                                        isValid,\n                                        dirty,\n                                        setFieldTouched,\n                                        setFieldError,\n                                    }) => (\n                                        <CalculatorForm>\n                                            <CalculatorHeader>\n                                                <CalculatorLabel htmlFor=\"message\">\n                                                    {localize('Swap charge')}\n                                                </CalculatorLabel>\n                                                <CalculatorOutputContainer>\n                                                    <CalculatorOutputField>\n                                                        {numberWithCommas(values.swapCharge)}\n                                                    </CalculatorOutputField>\n                                                    <CalculatorOutputSymbol>\n                                                        {values.swapChargeSymbol}\n                                                    </CalculatorOutputSymbol>\n                                                </CalculatorOutputContainer>\n                                            </CalculatorHeader>\n\n                                            <CalculatorBody>\n                                                <Dropdown\n                                                    mb=\"3.6rem\"\n                                                    default_option={optionItemDefault}\n                                                    option_list={values.optionList}\n                                                    label={localize('Symbol')}\n                                                    selected_option={values.symbol}\n                                                    id=\"symbol\"\n                                                    onChange={(value) => {\n                                                        setFieldValue(\n                                                            'swapCurrency',\n                                                            getCurrency(value),\n                                                        )\n                                                        setFieldValue(\n                                                            'contractSize',\n                                                            getContractSize(value),\n                                                        )\n                                                        setFieldValue('symbol', value)\n                                                    }}\n                                                    contractSize={values.contractSize}\n                                                    error={touched.symbol && errors.symbol}\n                                                    onBlur={handleBlur}\n                                                />\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"volume\"\n                                                        value={values.volume}\n                                                        onChange={(value) => {\n                                                            setFieldValue('volume', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"volume\"\n                                                                type=\"text\"\n                                                                label={localize('Volume')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.volume && errors.volume\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'volume',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('volume', '')\n                                                                    setFieldTouched(\n                                                                        'volume',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength={getMaxLength(\n                                                                    values.volume,\n                                                                    8,\n                                                                )}\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n\n                                                <InputGroup>\n                                                    <Field\n                                                        name=\"pointValue\"\n                                                        value={values.pointValue}\n                                                        onChange={(value) => {\n                                                            setFieldValue('pointValue', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"pointValue\"\n                                                                type=\"text\"\n                                                                value={values.pointValue}\n                                                                label={localize('Point value')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.pointValue &&\n                                                                    errors.pointValue\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'pointValue',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('pointValue', '')\n                                                                    setFieldTouched(\n                                                                        'pointValue',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength={getMaxLength(\n                                                                    values.pointValue,\n                                                                    15,\n                                                                )}\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </InputGroup>\n\n                                                <StyledInputGroup>\n                                                    <Field\n                                                        name=\"swapRate\"\n                                                        value={values.swapRate}\n                                                        onChange={(value) => {\n                                                            setFieldValue('swapRate', value)\n                                                        }}\n                                                    >\n                                                        {({ field }) => (\n                                                            <Input\n                                                                {...field}\n                                                                id=\"swapRate\"\n                                                                type=\"text\"\n                                                                value={values.swapRate}\n                                                                label={localize('Swap rate')}\n                                                                autoComplete=\"off\"\n                                                                error={\n                                                                    touched.swapRate &&\n                                                                    errors.swapRate\n                                                                }\n                                                                onBlur={handleBlur}\n                                                                data-lpignore=\"true\"\n                                                                handleError={(current_input) => {\n                                                                    setFieldValue(\n                                                                        'swapRate',\n                                                                        '',\n                                                                        false,\n                                                                    )\n                                                                    setFieldError('swapRate', '')\n                                                                    setFieldTouched(\n                                                                        'swapRate',\n                                                                        false,\n                                                                        false,\n                                                                    )\n                                                                    current_input.focus()\n                                                                }}\n                                                                maxLength={getMaxLength(\n                                                                    values.swapRate,\n                                                                    15,\n                                                                )}\n                                                                background=\"white\"\n                                                            />\n                                                        )}\n                                                    </Field>\n                                                </StyledInputGroup>\n                                                <Flex mt=\"1.5rem\">\n                                                    <CalculateButton\n                                                        secondary\n                                                        type=\"submit\"\n                                                        disabled={!isValid || !dirty}\n                                                    >\n                                                        {localize('Calculate')}\n                                                    </CalculateButton>\n                                                </Flex>\n                                            </CalculatorBody>\n                                        </CalculatorForm>\n                                    )}\n                                </Formik>\n                            </SwapFormWrapper>\n\n                            <RightContent direction=\"column\" max_width=\"69rem\">\n                                <Header as=\"h3\" type=\"section-title\" mb=\"8px\">\n                                    {localize('How to calculate swap charges')}\n                                </Header>\n\n                                <Text>\n                                    <Localize translate_text=\"For financial, the swap charge is calculated based on this formula:\" />\n                                </Text>\n                                <Text mb=\"2rem\">\n                                    <Localize\n                                        translate_text=\"<0>Swap charge = volume × contract size × point value × swap rate</0>\"\n                                        components={[<strong key={0} />]}\n                                    />\n                                </Text>\n\n                                <Text mb=\"2rem\">\n                                    <Localize translate_text=\"This gives you the swap charge in the quote currency for forex pairs, or in the denomination of the underlying asset for commodities.\" />\n                                </Text>\n\n                                <Text mb=\"2rem\">\n                                    <Localize translate_text=\"For instance, if you are trading the USD/JPY forex pair, the swap charge will be computed in Japanese Yen (JPY) which is the quote currency. On the other hand, if you are trading oil,  then the swap charge will be computed in US Dollar (USD), which is the denomination of the underlying asset – oil.\" />\n                                </Text>\n\n                                <Header as=\"h3\" type=\"section-title\" mb=\"16px\">\n                                    {localize('Example calculation')}\n                                </Header>\n\n                                <Accordion has_single_state>\n                                    <AccordionItem\n                                        header={localize('Swap charge')}\n                                        header_style={header_style}\n                                        style={item_style}\n                                        plus\n                                    >\n                                        <Text mb=\"2rem\">\n                                            {localize(\n                                                'Let’s say you want to keep two lots of EUR/USD with a point value of 0.00001 and swap rate of -0.12 open for one night.',\n                                            )}\n                                        </Text>\n\n                                        <Show.Desktop>\n                                            <QueryImage\n                                                data={data.swap_forex_formula}\n                                                alt={localize('Swap forex formula')}\n                                            />\n                                        </Show.Desktop>\n                                        <Show.Mobile>\n                                            <QueryImage\n                                                data={data.swap_forex_formula_mobile}\n                                                alt={localize('Swap forex formula mobile')}\n                                            />\n                                        </Show.Mobile>\n                                        <FormulaText size=\"14px\">\n                                            <StyledOl>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"One standard lot for Forex = 100,000 units\" />\n                                                    </span>\n                                                </li>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"The point value is derivied from the current digits of the asset. In this example, the digit is 5, so the point value is 0.00001.\" />\n                                                    </span>\n                                                </li>\n                                                <li>\n                                                    <span>\n                                                        <Localize translate_text=\"If the swap rate is positive, your account will be credited with the swap amount. If it is negative, your account will be debited.\" />\n                                                    </span>\n                                                </li>\n                                            </StyledOl>\n                                        </FormulaText>\n\n                                        <Text mt=\"1.6rem\">\n                                            <Localize\n                                                translate_text=\"So you will require a swap charge of <0>0.24 USD</0> to keep the position open for one night.\"\n                                                components={[<strong key={0} />]}\n                                            />\n                                        </Text>\n                                    </AccordionItem>\n                                </Accordion>\n                                <LinkWrapper height=\"auto\">\n                                    <StyledLinkButton\n                                        tertiary=\"true\"\n                                        type=\"mt5\"\n                                        external=\"true\"\n                                        target=\"_blank\"\n                                        rel=\"noopener noreferrer\"\n                                    >\n                                        {localize('Go to DMT5 dashboard')}\n                                    </StyledLinkButton>\n                                    <StyledLinkButton\n                                        secondary=\"true\"\n                                        to=\"/trade-types/margin#swap-policy/\"\n                                    >\n                                        {localize('Learn more about swap')}\n                                    </StyledLinkButton>\n                                </LinkWrapper>\n                            </RightContent>\n                        </ContentContainer>\n                    </>\n                )}\n            </StyledSection>\n        </>\n    )\n}\n\nexport default SwapCalculator\n","import React from 'react'\nimport { Hero } from '../common/_style'\nimport SwapCalculatorSection from './_swap-calculator'\nimport { Container, SEO } from 'components/containers'\nimport { Header } from 'components/elements'\nimport { localize, WithIntl } from 'components/localization'\nimport Layout from 'components/layout/layout'\n\nconst SwapCalculator = () => {\n    return (\n        <Layout>\n            <SEO title={localize('Swap Calculator')} description={localize('Swap Calculator')} />\n            <Hero jc=\"center\" ai=\"center\">\n                <Container>\n                    <Header as=\"h1\" type=\"display-title\" color=\"white\" align=\"center\">\n                        {localize('Swap Calculator')}\n                    </Header>\n                </Container>\n            </Hero>\n            <SwapCalculatorSection />\n        </Layout>\n    )\n}\nexport default WithIntl()(SwapCalculator)\n"],"sourceRoot":""}