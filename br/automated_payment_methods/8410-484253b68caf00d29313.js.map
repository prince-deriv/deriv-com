{"version":3,"sources":["webpack://deriv-com/./src/pages/home/_trade-types-card.js","webpack://deriv-com/./src/pages/home/_trade-types.js"],"names":["CustomLinkWrap","styled","CustomWrap","LogoDiv","StyledText","Text","StyledCard","LocalizedLink","Header","icon","title","description","link","linkTitle","aria_label","to","weight","mr","color","localize","src","Arrow","alt","width","height","TradingButton","LinkButton","StyledContainer","Container","margin","MarginLogo","translate_text","options","OptionsLogo","multipliers","MultipliersLogo","trade_types","React","DerivStore","is_eu_country","direction","max_width","as","type","size","mt","mb","secondary","map","trade_type","idx","key"],"mappings":"qNAOMA,EAAiBC,oBAAH,wEAAGA,CAAH,6GAQdC,EAAaD,oBAAH,oEAAGA,CAAH,sDAKVE,EAAUF,oBAAH,iEAAGA,CAAH,wBAIPG,GAAaH,QAAOI,MAAV,+EAAGJ,CAAH,yCAKVK,GAAaL,QAAOM,MAAV,+EAAGN,CAAH,ujBAkBNC,EAGAF,EAQJK,KAGAG,MAkCN,EA1BuB,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACtD,OACI,gBAACP,EAAD,CAAYQ,WAAYD,EAAWE,GAAIH,GACnC,gBAACV,EAAD,KACI,gBAACC,EAAD,KAAUM,GACV,gBAAC,KAAD,KAASC,GACT,gBAACN,EAAD,KAAaO,IAEjB,gBAACX,EAAD,KACI,gBAAC,KAAD,CAAMgB,OAAO,OAAOC,GAAG,SAASC,MAAM,QACjCC,QAAS,eACN,IACR,uBAAKC,IAAKC,IAAOC,IAAI,QAAQC,MAAM,KAAKC,OAAO,U,iECrEzDC,GAAgBxB,QAAOyB,MAAV,8EAAGzB,CAAH,6GASb0B,GAAkB1B,QAAO2B,MAAV,gFAAG3B,CAAH,gEAyErB,EAlEmB,WACf,IAAM4B,EAAS,CACXpB,KAAM,uBAAKW,IAAKU,IAAYR,IAAI,GAAGC,MAAM,KAAKC,OAAO,OACrDd,MAAO,gBAAC,KAAD,CAAUqB,eAAe,mBAChCpB,YACI,gBAAC,KAAD,CAAUoB,eAAe,iFAE7BnB,KAAM,uBACNC,WAAWM,QAAS,WAElBa,EAAU,CACZvB,KAAM,uBAAKW,IAAKa,IAAaX,IAAI,GAAGC,MAAM,KAAKC,OAAO,OACtDd,MAAO,gBAAC,KAAD,CAAUqB,eAAe,YAChCpB,YACI,gBAAC,KAAD,CAAUoB,eAAe,oFAE7BnB,KAAM,wBACNC,WAAWM,QAAS,YAElBe,EAAc,CAChBzB,KAAM,uBAAKW,IAAKe,IAAiBb,IAAI,GAAGC,MAAM,KAAKC,OAAO,OAC1Dd,MAAO,gBAAC,KAAD,CAAUqB,eAAe,gBAChCpB,YACI,gBAAC,KAAD,CAAUoB,eAAe,wFAE7BnB,KAAM,2BACNC,WAAWM,QAAS,eAKlBiB,EAFoBC,aAAiBC,KAAnCC,cAE4B,CAACV,EAAQK,GAAe,CAACL,EAAQG,EAASE,GAE9E,OACI,2BACI,gBAACP,EAAD,KACI,gBAAC,KAAD,CAAMa,UAAU,SAASC,UAAU,WAC/B,gBAAC,KAAD,CAAQC,GAAG,KAAKC,KAAK,kBAChBxB,QAAS,gBAEd,gBAAC,KAAD,CAAMyB,KAAK,SAASC,GAAG,SAASC,GAAG,SAC9B3B,QACG,qEAGR,gBAACM,EAAD,CAAekB,KAAK,SAASI,UAAU,OAAOhC,GAAG,aAC5CI,QAAS,mBAGlB,gBAAC,KAAD,KACKiB,EAAYY,KAAI,SAACC,EAAYC,GAAb,OACb,gBAAC,EAAD,CACIC,IAAKD,EACLzC,KAAMwC,EAAWxC,KACjBC,MAAOuC,EAAWvC,MAClBC,YAAasC,EAAWtC,YACxBC,KAAMqC,EAAWrC,KACjBC,UAAWoC,EAAWpC","file":"8410-484253b68caf00d29313.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { Header, Text } from 'components/elements'\nimport { localize, LocalizedLink } from 'components/localization'\nimport Arrow from 'images/svg/arrow-right.svg'\n\nconst CustomLinkWrap = styled.div`\n    display: flex;\n    opacity: 0;\n    transition: visibility 0s, opacity 0.5s ease-in;\n    margin-top: 5px;\n    align-items: center;\n`\n\nconst CustomWrap = styled.div`\n    display: block;\n    transition: transform 0.2s ease-in;\n`\n\nconst LogoDiv = styled.div`\n    text-align: center;\n`\n\nconst StyledText = styled(Text)`\n    text-align: center;\n    font-size: 1.6rem;\n`\n\nconst StyledCard = styled(LocalizedLink)`\n    max-width: 28.2rem;\n    margin: 0 1.2rem;\n    padding: 6.4rem 2.3rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    min-height: 100%;\n    box-shadow: none;\n    border: 1px solid var(--color-grey-2);\n    border-radius: 8px;\n    text-decoration: none;\n\n    &:hover {\n        border-color: var(--color-white);\n        box-shadow: 0 16px 20px 0 rgba(0, 0, 0, 0.05), 0 0 20px 0 rgba(0, 0, 0, 0.05);\n\n        ${CustomWrap} {\n            transform: translateY(-10px);\n        }\n        ${CustomLinkWrap} {\n            visibility: visible;\n            opacity: 1;\n        }\n    }\n    &:nth-child(4) {\n        margin-right: unset;\n    }\n    ${Text} {\n        font-size: 1.6rem;\n    }\n    ${Header} {\n        text-align: center;\n        font-size: 2.4rem;\n        margin-bottom: 0.8rem;\n        margin-top: 2.4rem;\n    }\n`\n\nconst TradeTypesCard = ({ icon, title, description, link, linkTitle }) => {\n    return (\n        <StyledCard aria_label={linkTitle} to={link}>\n            <CustomWrap>\n                <LogoDiv>{icon}</LogoDiv>\n                <Header>{title}</Header>\n                <StyledText>{description}</StyledText>\n            </CustomWrap>\n            <CustomLinkWrap>\n                <Text weight=\"bold\" mr=\"0.8rem\" color=\"red\">\n                    {localize('Learn more')}\n                </Text>{' '}\n                <img src={Arrow} alt=\"arrow\" width=\"16\" height=\"16\" />\n            </CustomLinkWrap>\n        </StyledCard>\n    )\n}\n\nTradeTypesCard.propTypes = {\n    description: PropTypes.any,\n    icon: PropTypes.any,\n    link: PropTypes.any,\n    linkTitle: PropTypes.any,\n    title: PropTypes.any,\n}\n\nexport default TradeTypesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport TradeTypesCard from './_trade-types-card'\nimport { Header, Text } from 'components/elements'\nimport { localize, Localize } from 'components/localization'\nimport { Container, Flex } from 'components/containers'\nimport MarginLogo from 'images/svg/trade-types/margin.svg'\nimport OptionsLogo from 'images/svg/trade-types/options.svg'\nimport MultipliersLogo from 'images/svg/trade-types/multipliers.svg'\nimport { LinkButton } from 'components/form'\nimport { DerivStore } from 'store'\n\nconst TradingButton = styled(LinkButton)`\n    height: 40px;\n    padding: 10px 48px;\n    display: flex;\n    align-items: center;\n    width: fit-content;\n    justify-content: center;\n`\n\nconst StyledContainer = styled(Container)`\n    margin: 0 auto 8rem;\n    height: auto;\n    width: 90%;\n    flex-wrap: nowrap;\n`\n\nconst TradeTypes = () => {\n    const margin = {\n        icon: <img src={MarginLogo} alt=\"\" width=\"48\" height=\"49\" />,\n        title: <Localize translate_text=\"Margin trading\" />,\n        description: (\n            <Localize translate_text=\"Trade with leverage and low spreads for better returns on successful trades.\" />\n        ),\n        link: '/trade-types/margin/',\n        linkTitle: localize('Margin'),\n    }\n    const options = {\n        icon: <img src={OptionsLogo} alt=\"\" width=\"48\" height=\"49\" />,\n        title: <Localize translate_text=\"Options\" />,\n        description: (\n            <Localize translate_text=\"Earn fixed payouts by predicting an asset's price movement within a fixed time.\" />\n        ),\n        link: '/trade-types/options/',\n        linkTitle: localize('Options'),\n    }\n    const multipliers = {\n        icon: <img src={MultipliersLogo} alt=\"\" width=\"48\" height=\"49\" />,\n        title: <Localize translate_text=\"Multipliers\" />,\n        description: (\n            <Localize translate_text=\"Get the best of both - the upside of margin trading with the simplicity of options.\" />\n        ),\n        link: '/trade-types/multiplier/',\n        linkTitle: localize('Multiplier'),\n    }\n\n    const { is_eu_country } = React.useContext(DerivStore)\n\n    const trade_types = is_eu_country ? [margin, multipliers] : [margin, options, multipliers]\n\n    return (\n        <div>\n            <StyledContainer>\n                <Flex direction=\"column\" max_width=\"28.2rem\">\n                    <Header as=\"h3\" type=\"section-title\">\n                        {localize('Trade types')}\n                    </Header>\n                    <Text size=\"2.4rem\" mt=\"1.6rem\" mb=\"5rem\">\n                        {localize(\n                            'Explore different trade types to trade on your preferred market.',\n                        )}\n                    </Text>\n                    <TradingButton type=\"submit\" secondary=\"true\" to=\"/signup/\">\n                        {localize('Start trading')}\n                    </TradingButton>\n                </Flex>\n                <Flex>\n                    {trade_types.map((trade_type, idx) => (\n                        <TradeTypesCard\n                            key={idx}\n                            icon={trade_type.icon}\n                            title={trade_type.title}\n                            description={trade_type.description}\n                            link={trade_type.link}\n                            linkTitle={trade_type.linkTitle}\n                        />\n                    ))}\n                </Flex>\n            </StyledContainer>\n        </div>\n    )\n}\n\nexport default TradeTypes\n"],"sourceRoot":""}