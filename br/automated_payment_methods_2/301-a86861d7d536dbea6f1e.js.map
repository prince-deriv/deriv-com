{"version":3,"sources":["webpack://deriv-com/./src/images/common/check-interim-bg.png","webpack://deriv-com/./src/images/common/interim-mobile-bg.png","webpack://deriv-com/./src/pages/interim/_love-trading.js","webpack://deriv-com/./src/pages/interim/deriv/_love-trading.js"],"names":["Section","styled","Box","props","image","Platform","device","mobile_image","PlatformMobile","Responsive","Container","AbsoluteWrapper","MobileWrapper","FitButton","LinkButton","StyledLeftContainer","Flex","LeftCTASection","params","button_text","button_url","cta_props","header","hide_cta","as","type","mb","align","tabletL","secondary","to","RightCTASection","button_props","width","fd","ai","ml","max_width","color","external","white","target","rel","LoveTradingComponent","bg_image","bg_image_mobile","left","right","data","useStaticQuery","p","jc","position","custom_content","content","translate_text","is_white"],"mappings":"wOAAA,EAAe,IAA0B,+DCAzC,EAAe,IAA0B,gECYnCA,GAAUC,QAAOC,MAAV,4EAAGD,CAAH,gSAGe,SAACE,GAAD,OAAWA,EAAMC,OAASC,IAMzCC,aAEmB,SAACH,GAAD,OAAWA,EAAMI,cAAgBC,KAO3DC,GAAaR,QAAOS,MAAV,+EAAGT,CAAH,uCACHK,aAKPK,GAAkBV,QAAOC,MAAV,oFAAGD,CAAH,+UA4BRK,aAKPM,EAAgBX,oBAAH,uEAAGA,CAAH,4DAGNK,aAMPO,GAAYZ,QAAOa,MAAV,8EAAGb,CAAH,wBAqBTc,GAAsBd,QAAOe,MAAV,wFAAGf,CAAH,8CACZK,aAMPW,EAAiB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAyDD,EAAzDC,YAAaC,EAA4CF,EAA5CE,WAAYC,EAAgCH,EAAhCG,UAAWC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,SACpD,OACI,gCACI,gBAAC,KAAD,CAAQC,GAAG,KAAKC,KAAK,gBAAgBC,GAAG,OAAOC,MAAM,SAASC,QAAS,CAAEF,GAAI,SACxEJ,GAEL,gBAACT,EAAD,CAAWgB,WAAS,EAACC,GAAIV,GACpBD,IAEHI,GAAY,gBAAC,IAAeF,GAAa,MASjDU,EAAkB,SAAC,GAAgB,IAAdb,EAAa,EAAbA,OACfc,EAAuEd,EAAvEc,aAAcb,EAAyDD,EAAzDC,YAAaC,EAA4CF,EAA5CE,WAAYC,EAAgCH,EAAhCG,UAAWC,EAAqBJ,EAArBI,OAAQC,EAAaL,EAAbK,SAClE,OACI,gBAAC,KAAD,CAAMU,MAAM,OAAOC,GAAG,SAASC,GAAG,SAASC,GAAG,IAAIC,UAAU,WACxD,gBAAC,KAAD,CAAQb,GAAG,KAAKc,MAAM,QAAQb,KAAK,gBAAgBC,GAAG,OAAOC,MAAM,UAC9DL,GAEL,gBAACT,EAAD,eACI0B,SAAS,OACTC,OAAK,EACLV,GAAIV,EACJqB,OAAO,SACPC,IAAI,uBACCV,GAAgB,IAEpBb,IAEHI,GAAY,gBAAC,IAAeF,GAAa,MAS1CsB,EAAuB,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,SAAUC,EAA0C,EAA1CA,gBAAiBzC,EAAyB,EAAzBA,MAAO0C,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACrEC,GAAOC,oBAtEN,aAuEP,OACI,gBAACjD,EAAD,CAASkD,EAAE,WAAW9C,MAAOwC,EAAUrC,aAAcsC,GACjD,gBAAClC,EAAD,KACI,gBAAC,KAAD,CAAYqC,KAAMA,EAAK5C,GAAQ6B,MAAM,WAEzC,gBAACxB,EAAD,CAAY0C,GAAG,gBAAgBC,SAAS,YACpC,gBAACrC,EAAD,CAAqBmB,GAAG,SAASC,GAAG,SAASE,UAAU,WAClDS,EAAKO,gBAAkB,gBAACpC,EAAD,CAAgBC,OAAQ4B,KAEpD,gBAAClC,EAAD,KACI,gBAAC,KAAD,CAAYoC,KAAMA,EAAK5C,GAAQ6B,MAAM,WAExCc,EAAMM,gBAAkB,gBAACtB,EAAD,CAAiBb,OAAQ6B,Q,+ECjK5DO,EAAU,CACZR,KAAM,CACFxB,OAAQ,gBAAC,KAAD,CAAUiC,eAAe,wCACjCpC,YAAa,gBAAC,KAAD,CAAUoC,eAAe,wBACtCnC,WAAY,KAEhBhB,MAAO,eACP2C,MAAO,CACHzB,OAAQ,gBAAC,KAAD,CAAUiC,eAAe,qDACjCpC,YAAa,gBAAC,KAAD,CAAUoC,eAAe,iCACtCnC,WAAY,UACZY,aAAc,CAAEP,KAAM,gBACtBJ,UAAW,CAAEmC,UAAU,KAM/B,UAFoB,kBAAM,gBAAC,IAAyBF","file":"301-a86861d7d536dbea6f1e.js","sourcesContent":["export default __webpack_public_path__ + \"static/check-interim-bg-ad9bd6fb0ac1113a4875d49f3ce5acf8.png\";","export default __webpack_public_path__ + \"static/interim-mobile-bg-d4f97b2cabc89f6d0af860e379107246.png\";","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport CtaBinary from './_cta-binary'\nimport { Container, Flex, Box } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\nimport { LinkButton } from 'components/form'\nimport device from 'themes/device'\nimport Platform from 'images/common/check-interim-bg.png'\nimport PlatformMobile from 'images/common/interim-mobile-bg.png'\n\nconst Section = styled(Box)`\n    width: 100%;\n    height: 350px;\n    background-image: url(${(props) => props.image || Platform});\n    background-size: 65% 100%;\n    background-position-x: right;\n    background-repeat: no-repeat;\n    position: relative;\n\n    @media ${device.tabletL} {\n        height: 700px;\n        background-image: url(${(props) => props.mobile_image || PlatformMobile});\n        background-size: 100% 63%;\n        background-position-y: bottom;\n        background-repeat: no-repeat;\n    }\n`\n\nconst Responsive = styled(Container)`\n    @media ${device.tabletL} {\n        flex-direction: column;\n    }\n`\n\nconst AbsoluteWrapper = styled(Box)`\n    width: 54rem;\n    position: absolute;\n    left: 30%;\n    bottom: 0;\n\n    @media (max-width: 1565px) {\n        left: 28%;\n\n        .gatsby-image-wrapper {\n            width: 50rem;\n        }\n    }\n    @media (max-width: 1390px) {\n        .gatsby-image-wrapper {\n            width: 44rem;\n        }\n    }\n    @media (max-width: 1300px) {\n        .gatsby-image-wrapper {\n            width: 35rem;\n        }\n    }\n    @media (max-width: 1146px) {\n        .gatsby-image-wrapper {\n            width: 30rem;\n        }\n    }\n    @media ${device.tabletL} {\n        display: none;\n    }\n`\n\nconst MobileWrapper = styled.div`\n    display: none;\n\n    @media ${device.tabletL} {\n        display: block;\n        margin: 3.2rem 0;\n    }\n`\n\nconst FitButton = styled(LinkButton)`\n    width: fit-content;\n`\n\nconst query = graphql`\n    query {\n        affiliate: file(relativePath: { eq: \"affiliate.png\" }) {\n            ...fadeIn\n        }\n        smart_trader: file(relativePath: { eq: \"smarttrader.png\" }) {\n            ...fadeIn\n        }\n        dmt5: file(relativePath: { eq: \"interim-dmt5.png\" }) {\n            ...fadeIn\n        }\n        dbot: file(relativePath: { eq: \"interim-dbot.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst StyledLeftContainer = styled(Flex)`\n    @media ${device.tabletL} {\n        height: 210px;\n        max-width: unset;\n    }\n`\n\nconst LeftCTASection = ({ params }) => {\n    const { button_text, button_url, cta_props, header, hide_cta } = params\n    return (\n        <>\n            <Header as=\"h3\" type=\"section-title\" mb=\"4rem\" align=\"center\" tabletL={{ mb: '34px' }}>\n                {header}\n            </Header>\n            <FitButton secondary to={button_url}>\n                {button_text}\n            </FitButton>\n            {!hide_cta && <CtaBinary {...(cta_props || {})} />}\n        </>\n    )\n}\n\nLeftCTASection.propTypes = {\n    params: PropTypes.object,\n}\n\nconst RightCTASection = ({ params }) => {\n    const { button_props, button_text, button_url, cta_props, header, hide_cta } = params\n    return (\n        <Flex width=\"auto\" fd=\"column\" ai=\"center\" ml=\"0\" max_width=\"38.4rem\">\n            <Header as=\"h3\" color=\"white\" type=\"section-title\" mb=\"3rem\" align=\"center\">\n                {header}\n            </Header>\n            <FitButton\n                external=\"true\"\n                white\n                to={button_url}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                {...(button_props || {})}\n            >\n                {button_text}\n            </FitButton>\n            {!hide_cta && <CtaBinary {...(cta_props || {})} />}\n        </Flex>\n    )\n}\n\nRightCTASection.propTypes = {\n    params: PropTypes.object,\n}\n\nexport const LoveTradingComponent = ({ bg_image, bg_image_mobile, image, left, right }) => {\n    const data = useStaticQuery(query)\n    return (\n        <Section p=\"3.2rem 0\" image={bg_image} mobile_image={bg_image_mobile}>\n            <AbsoluteWrapper>\n                <QueryImage data={data[image]} width=\"54rem\" />\n            </AbsoluteWrapper>\n            <Responsive jc=\"space-between\" position=\"relative\">\n                <StyledLeftContainer fd=\"column\" ai=\"center\" max_width=\"28.2rem\">\n                    {left.custom_content || <LeftCTASection params={left} />}\n                </StyledLeftContainer>\n                <MobileWrapper>\n                    <QueryImage data={data[image]} width=\"30rem\" />\n                </MobileWrapper>\n                {right.custom_content || <RightCTASection params={right} />}\n            </Responsive>\n        </Section>\n    )\n}\n\nLoveTradingComponent.propTypes = {\n    bg_image: PropTypes.object,\n    bg_image_mobile: PropTypes.object,\n    image: PropTypes.string,\n    left: PropTypes.object,\n    right: PropTypes.object,\n}\n","import React from 'react'\nimport { LoveTradingComponent } from '../_love-trading'\nimport { Localize } from 'components/localization'\n\nconst content = {\n    left: {\n        header: <Localize translate_text=\"Be among the first to try Deriv.com\" />,\n        button_text: <Localize translate_text=\"Visit Deriv.com now\" />,\n        button_url: '/',\n    },\n    image: 'smart_trader',\n    right: {\n        header: <Localize translate_text=\"Love trading on Binary.comâ€™s signature platform?\" />,\n        button_text: <Localize translate_text=\"Try SmartTrader on Deriv.com\" />,\n        button_url: 'trading',\n        button_props: { type: 'smart_trader' },\n        cta_props: { is_white: true },\n    },\n}\n\nconst LoveTrading = () => <LoveTradingComponent {...content} />\n\nexport default LoveTrading\n"],"sourceRoot":""}