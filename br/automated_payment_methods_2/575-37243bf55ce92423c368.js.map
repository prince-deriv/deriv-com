{"version":3,"sources":["webpack://deriv-com/./src/pages/home/_trade.js"],"names":["platforms","Object","freeze","trader","bot","mt5","ImageWrapper","styled","props","is_selected","ImageContainer","StyledSection","SectionContainer","is_ppc_redirect","data","useStaticQuery","React","selected","setSelected","direction","as","type","align","localize","weight","m","width","style","maxWidth","marginRight","alt","row_gap","height","onMouseEnter","onMouseLeave","TraderCard","BotCard","DMT5Card"],"mappings":"mMASMA,EAAYC,OAAOC,OAAO,CAC5BC,OAAQ,UACRC,IAAK,OACLC,IAAK,SAGHC,EAAeC,oBAAH,gEAAGA,CAAH,iIAIA,SAACC,GAAD,OAAYA,EAAMC,YAAc,UAAY,YAC/C,SAACD,GAAD,OAAYA,EAAMC,YAAc,IAAM,OACtC,SAACD,GAAD,OAAYA,EAAMC,YAAc,IAAM,QAK/CC,EAAiBH,oBAAH,kEAAGA,CAAH,+CAKdI,GAAgBJ,QAAOK,MAAV,4EAAGL,CAAH,2FAqFnB,UApEc,SAAC,GAAyB,IAAvBM,EAAsB,EAAtBA,gBACPC,GAAOC,oBAfN,cAiBP,EAAgCC,WAAe,MAAxCC,EAAP,KAAiBC,EAAjB,KACA,OACI,gBAACP,EAAD,KACI,gBAAC,KAAD,CAAWQ,UAAU,UACjB,gBAAC,KAAD,CAAQC,GAAG,KAAKC,KAAK,gBAAgBC,MAAM,WACtCC,QAAS,2BAEd,gBAAC,KAAD,CACIC,OAAO,SACPJ,GAAG,KACHC,KAAK,oBACLC,MAAM,SACNG,EAAE,kBAEDF,QAAS,qEAEd,gBAAC,KAAD,CAAMG,MAAM,OAAOP,UAAU,cACzB,uBAAKQ,MAAO,CAAED,MAAO,OAAQE,SAAU,UAAWC,YAAa,SAC3D,gBAACnB,EAAD,KACI,gBAACJ,EAAD,CAAcG,aAAcQ,GAAYA,IAAajB,EAAUG,QAC3D,gBAAC,KAAD,CACIW,KAAMA,EAAI,cACVgB,KAAKP,QAAS,cAGtB,gBAACjB,EAAD,CAAcG,YAAaQ,IAAajB,EAAUI,KAC9C,gBAAC,KAAD,CAAYU,KAAMA,EAAI,WAAgBgB,KAAKP,QAAS,WAExD,gBAACjB,EAAD,CAAcG,YAAaQ,IAAajB,EAAUK,KAC9C,gBAAC,KAAD,CAAYS,KAAMA,EAAI,WAAgBgB,KAAKP,QAAS,aAIhE,uBAAKI,MAAO,CAAED,MAAO,OAAQE,SAAU,YACnC,gBAAC,KAAD,CAASG,QAAQ,SAASC,OAAO,MAC7B,uBACIC,aAAc,kBAAMf,EAAYlB,EAAUG,SAC1C+B,aAAc,kBAAMhB,EAAY,MAEhC,gBAAC,EAAAiB,WAAD,OAEJ,uBACIF,aAAc,kBAAMf,EAAYlB,EAAUI,MAC1C8B,aAAc,kBAAMhB,EAAY,MAEhC,gBAAC,EAAAkB,QAAD,OAEJ,uBACIH,aAAc,kBAAMf,EAAYlB,EAAUK,MAC1C6B,aAAc,kBAAMhB,EAAY,MAEhC,gBAAC,EAAAmB,SAAD,CAAUxB,gBAAiBA","file":"575-37243bf55ce92423c368.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport { TraderCard, BotCard, DMT5Card } from 'components/custom/other-platforms.js'\nimport { localize } from 'components/localization'\nimport { SectionContainer, Container, Flex, CssGrid } from 'components/containers'\nimport { Header, QueryImage } from 'components/elements'\n\nconst platforms = Object.freeze({\n    trader: 'dtrader',\n    bot: 'dbot',\n    mt5: 'dmt5',\n})\n\nconst ImageWrapper = styled.div`\n    height: 100%;\n    width: 100%;\n    max-width: 65.7rem;\n    visibility: ${(props) => (props.is_selected ? 'initial' : 'hidden')};\n    opacity: ${(props) => (props.is_selected ? '1' : '0')};\n    z-index: ${(props) => (props.is_selected ? '0' : '10')};\n    position: absolute;\n    transition: opacity 0.25s;\n`\n\nconst ImageContainer = styled.div`\n    position: relative;\n    height: 100%;\n    width: 100%;\n`\nconst StyledSection = styled(SectionContainer)`\n    background-image: linear-gradient(to bottom, var(--color-grey-30), rgba(238, 238, 238, 0));\n`\nconst query = graphql`\n    query {\n        dtrader_trade: file(relativePath: { eq: \"dtrader_trade_home.png\" }) {\n            ...fadeIn\n        }\n        dbot_trade: file(relativePath: { eq: \"dbot_trade_home.png\" }) {\n            ...fadeIn\n        }\n        dmt5_trade: file(relativePath: { eq: \"dmt5_trade_home.png\" }) {\n            ...fadeIn\n        }\n    }\n`\n\nconst Trade = ({ is_ppc_redirect }) => {\n    const data = useStaticQuery(query)\n    // one option always has to be selected\n    const [selected, setSelected] = React.useState(null)\n    return (\n        <StyledSection>\n            <Container direction=\"column\">\n                <Header as=\"h3\" type=\"section-title\" align=\"center\">\n                    {localize('Trade the way you like')}\n                </Header>\n                <Header\n                    weight=\"normal\"\n                    as=\"h4\"\n                    type=\"sub-section-title\"\n                    align=\"center\"\n                    m=\"1.6rem 0 6rem\"\n                >\n                    {localize('Choose from three powerful platforms â€” designed with you in mind')}\n                </Header>\n                <Flex width=\"100%\" direction=\"flex-start\">\n                    <div style={{ width: '100%', maxWidth: '65.7rem', marginRight: '6rem' }}>\n                        <ImageContainer>\n                            <ImageWrapper is_selected={!selected || selected === platforms.trader}>\n                                <QueryImage\n                                    data={data['dtrader_trade']}\n                                    alt={localize('DTrader')}\n                                />\n                            </ImageWrapper>\n                            <ImageWrapper is_selected={selected === platforms.bot}>\n                                <QueryImage data={data['dbot_trade']} alt={localize('DBot')} />\n                            </ImageWrapper>\n                            <ImageWrapper is_selected={selected === platforms.mt5}>\n                                <QueryImage data={data['dmt5_trade']} alt={localize('DMT5')} />\n                            </ImageWrapper>\n                        </ImageContainer>\n                    </div>\n                    <div style={{ width: '100%', maxWidth: '38.4rem' }}>\n                        <CssGrid row_gap=\"1.6rem\" height=\"0%\">\n                            <div\n                                onMouseEnter={() => setSelected(platforms.trader)}\n                                onMouseLeave={() => setSelected('')}\n                            >\n                                <TraderCard />\n                            </div>\n                            <div\n                                onMouseEnter={() => setSelected(platforms.bot)}\n                                onMouseLeave={() => setSelected('')}\n                            >\n                                <BotCard />\n                            </div>\n                            <div\n                                onMouseEnter={() => setSelected(platforms.mt5)}\n                                onMouseLeave={() => setSelected('')}\n                            >\n                                <DMT5Card is_ppc_redirect={is_ppc_redirect} />\n                            </div>\n                        </CssGrid>\n                    </div>\n                </Flex>\n            </Container>\n        </StyledSection>\n    )\n}\n\nTrade.propTypes = {\n    is_ppc_redirect: PropTypes.bool,\n}\n\nexport default Trade\n"],"sourceRoot":""}